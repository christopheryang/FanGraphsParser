buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
//apply plugin: 'org.liquibase.gradle'

// =============== For Microservice =============
/*
jar {
	baseName = 'finance-tool-api'
	version =  '1.144-SNAPSHOT'
}
*/
// ==============================================

// =============== For Java EE Servers =============
apply plugin: 'war'
war {
	//baseName = 'finance-tool-api'
	//version =  '1.141-SNAPSHOT'
	archiveName 'fangraphsparser.war'
}
configurations {
	providedRuntime
}
// =================================================

configurations {
  javacApt
}
dependencies {
  javacApt 'com.mysema.querydsl:querydsl-apt:3.3.0'
}

configurations.all {
   exclude group: 'commons-logging', module: 'commons-logging'
   exclude group: 'commons-collection', module: 'commons-collection'
}

repositories {
	mavenLocal()
	mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	
	// ========= For Microservices ======
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	//compile 'org.springframework.boot:spring-boot-starter-tomcat'
	// ==================================
	
	// ========= For Java EE Servers =======
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	// =====================================
	
	// ======= Spring boot managed dependencies =======
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'joda-time:joda-time'
	
	
	// ======= Override the transitive dependencies from common-dto =======
	compile 'com.fasterxml.jackson.core:jackson-annotations'
	compile 'com.fasterxml.jackson.core:jackson-core'
	compile 'org.hibernate:hibernate-validator'
	runtime 'ch.qos.logback:logback-classic'
	compile 'org.slf4j:slf4j-api'
	runtime 'org.slf4j:jcl-over-slf4j'
	
	// ======= Non-Spring boot managed dependencies =======
	runtime 'mysql:mysql-connector-java:5.1.25'
	compile 'com.google.guava:guava:18.0'
	compile 'com.opencsv:opencsv:3.6'
	javacApt 'com.mysema.querydsl:querydsl-apt:3.7.0'
	compile 'com.mysema.querydsl:querydsl-jpa:3.7.0'
	
	// ======= Testing =======
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'com.jayway.jsonpath:json-path:1.1.0'
	testCompile 'com.jayway.jsonpath:json-path-assert:1.1.0'

	// ======= Liquibase =======
	//classpath 'gradle.plugin.org.liquibase:liquibase-gradle-plugin:1.1.1'
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}

// Pass system properties from the command line to the test classes
test {
	systemProperty 'spring.profiles.active', project.hasProperty('spring.profiles.active')? project.getProperty('spring.profiles.active'): 'dev'
	test.jvmArgs System.getProperty("test.jvmArgs")? System.getProperty("test.jvmArgs").split(" "): []
}

// Querydsl metamodel generation
compileJava {
  options.compilerArgs <<
	'-processorpath' << (configurations.compile + configurations.javacApt).asPath <<
	'-processor' << 'com.mysema.query.apt.jpa.JPAAnnotationProcessor'
}
